"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9091],{1973:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"getting-started/register","title":"Joining the Gaia Protocol","description":"After successfully running a Gaia node on your machine, it\'s time to join the Gaia protocol network and get rewards for sharing computing power with the world by binding your node ID and device ID to a Metamask account.","source":"@site/docs/getting-started/register.md","sourceDirName":"getting-started","slug":"/getting-started/register","permalink":"/getting-started/register","draft":false,"unlisted":false,"editUrl":"https://github.com/GaiaNet-AI/docs/edit/main/docs/getting-started/register.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Gaia CLI options","permalink":"/getting-started/cli-options"},"next":{"title":"Troubleshooting","permalink":"/getting-started/troubleshooting"}}');var o=t(4848),s=t(8453);const r={sidebar_position:6},a="Joining the Gaia Protocol",d={},c=[{value:"Protect your node ID and device ID",id:"protect-your-node-id-and-device-id",level:3},{value:"Select a different domain",id:"select-a-different-domain",level:3}];function l(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"joining-the-gaia-protocol",children:"Joining the Gaia Protocol"})}),"\n",(0,o.jsx)(n.p,{children:"After successfully running a Gaia node on your machine, it's time to join the Gaia protocol network and get rewards for sharing computing power with the world by binding your node ID and device ID to a Metamask account."}),"\n",(0,o.jsxs)(n.p,{children:["When you run a node with the Getting Started guide, you may notice that the Gaia software has generated a node ID for you. The node ID is an ETH address. The easiest way to find the node ID is to use ",(0,o.jsx)(n.code,{children:"gaianet info"})," to print the node ID and device ID on the terminal."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"gaianet info\n"})}),"\n",(0,o.jsx)(n.p,{children:"The output will be the following:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Node ID: 0x80642b1----9a76a284efeb2bb6d142e\n\nDevice ID: device-e77---1446f1b51\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:t(3073).A+"",width:"1524",height:"370"})}),"\n",(0,o.jsx)(n.p,{children:"To receive rewards, bind your node and device IDs with a Metamask account using the Gaia web portal:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Open ",(0,o.jsx)(n.a,{href:"https://www.gaianet.ai/",children:"https://www.gaianet.ai/"})," on your browser and click ",(0,o.jsx)(n.strong,{children:'"Connect."'})]}),"\n",(0,o.jsx)(n.li,{children:"Log into Metamask using the QR code and connect your account."}),"\n",(0,o.jsxs)(n.li,{children:["Hover on your profile and click ",(0,o.jsx)(n.strong,{children:'"Setting"'})," and click ",(0,o.jsx)(n.strong,{children:'"Nodes."'})]}),"\n",(0,o.jsxs)(n.li,{children:["Click ",(0,o.jsx)(n.strong,{children:'"Connect new node"'})," and enter your node and device IDs in the boxes."]}),"\n",(0,o.jsxs)(n.li,{children:["Click ",(0,o.jsx)(n.strong,{children:'"Join"'}),(0,o.jsx)(n.br,{}),"\n",(0,o.jsx)(n.img,{src:t(1994).A+"",width:"3341",height:"1832"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"After your node has successfully joined the network, it will be displayed in the list of nodes on the Node Page."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"If you are running multiple nodes, you can bind the node IDs and their corresponding device IDs to your MetaMask wallet."})}),"\n",(0,o.jsx)(n.h3,{id:"protect-your-node-id-and-device-id",children:"Protect your node ID and device ID"}),"\n",(0,o.jsxs)(n.p,{children:["The Gaia installer generates a pair of ETH address and keystore and password for your node automatically. This information is stored in the ",(0,o.jsx)(n.code,{children:"gaianet/nodeid.json"})," file. Please keep the JSON file carefully."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The ETH address is your node ID. You will use this ETH address to join the Gaia network."}),"\n",(0,o.jsx)(n.li,{children:"The keystore stores the private key associated with the ETH address encrypted by the password."}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"nodeid.json"})," file is the only proof that your node belongs to you.\nIn many protocol operations, you will need this private key to sign request messages to send to the protocol smart contracts."]})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"The device ID is only visible to yourself."})}),"\n",(0,o.jsx)(n.h3,{id:"select-a-different-domain",children:"Select a different domain"}),"\n",(0,o.jsxs)(n.p,{children:["By default, a new Gaia node joins the ",(0,o.jsx)(n.code,{children:"gaianet.network"})," domain. You can select a different domain to join by putting\nthe Gaia domain's public DNS name in the ",(0,o.jsx)(n.code,{children:"domain"})," field in the ",(0,o.jsx)(n.code,{children:"config.json"}),". Please note that most Gaia domains\nrequire approval for nodes to join. You have to abide by the domain's rules before your node can become publicly accessible\non the domain URL."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1994:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/node-register-57acac5fa455af6b6b35b500149bd9a2.png"},3073:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/register-01-fcaa9730a879aeaf3f91746bce5b1c68.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);