"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9780],{3740:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"node-guide/tasks/local","title":"Run a local-only node","description":"By default, the GaiaNet node registers itself with a GaiaNet domain and is accesible from the public.","source":"@site/versioned_docs/version-1.0.0/node-guide/tasks/local.md","sourceDirName":"node-guide/tasks","slug":"/node-guide/tasks/local","permalink":"/1.0.0/node-guide/tasks/local","draft":false,"unlisted":false,"editUrl":"https://github.com/GaiaNet-AI/docs/edit/main/versioned_docs/version-1.0.0/node-guide/tasks/local.md","tags":[],"version":"1.0.0","sidebarPosition":104,"frontMatter":{"sidebar_position":104},"sidebar":"tutorialSidebar","previous":{"title":"Install multiple nodes on a single machine","permalink":"/1.0.0/node-guide/tasks/multiple"},"next":{"title":"Protect the server process","permalink":"/1.0.0/node-guide/tasks/protect"}}');var s=n(4848),a=n(8453);const i={sidebar_position:104},r="Run a local-only node",l={},d=[];function c(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"run-a-local-only-node",children:"Run a local-only node"})}),"\n",(0,s.jsxs)(t.p,{children:["By default, the GaiaNet node registers itself with a GaiaNet domain and is accesible from the public.\nFor many users, it could also be important to start a local server for testing. To do that, you just\nneed to pass the ",(0,s.jsx)(t.code,{children:"--local-only"})," option."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"gaianet start --local-only\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var o=n(6540);const s={},a=o.createContext(s);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);